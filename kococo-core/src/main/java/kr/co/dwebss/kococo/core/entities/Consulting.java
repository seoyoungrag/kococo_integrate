package kr.co.dwebss.kococo.core.entities;
// Generated 2019. 7. 3 ���� 1:57:17 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.time.LocalDateTime;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;

/**
 * Consulting generated by hbm2java
 */
@Entity
@Table(name = "consulting", catalog = "kococo_dev")
public class Consulting implements java.io.Serializable {

	private int consultingId;
	private Record record;
	private String consultingTitle;
	private String consultingContents;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	private LocalDateTime consultingRegistDt;
	private Set<ConsultingReply> consultingReplies = new HashSet<ConsultingReply>(0);

	public Consulting() {
	}

	public Consulting(int consultingId) {
		this.consultingId = consultingId;
	}

	public Consulting(int consultingId, Record record, String consultingTitle, String consultingContents,
			LocalDateTime consultingRegistDt, Set<ConsultingReply> consultingReplies) {
		this.consultingId = consultingId;
		this.record = record;
		this.consultingTitle = consultingTitle;
		this.consultingContents = consultingContents;
		this.consultingRegistDt = consultingRegistDt;
		this.consultingReplies = consultingReplies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "CONSULTING_ID", unique = true, nullable = false)
	public int getConsultingId() {
		return this.consultingId;
	}

	public void setConsultingId(int consultingId) {
		this.consultingId = consultingId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RECORD_ID")
	public Record getRecord() {
		return this.record;
	}

	public void setRecord(Record record) {
		this.record = record;
	}

	@Column(name = "CONSULTING_TITLE", length = 200)
	public String getConsultingTitle() {
		return this.consultingTitle;
	}

	public void setConsultingTitle(String consultingTitle) {
		this.consultingTitle = consultingTitle;
	}

	@Column(name = "CONSULTING_CONTENTS", length = 5000)
	public String getConsultingContents() {
		return this.consultingContents;
	}

	public void setConsultingContents(String consultingContents) {
		this.consultingContents = consultingContents;
	}

	@Column(name = "CONSULTING_REGIST_DT", length = 19)
	public LocalDateTime getConsultingRegistDt() {
		return this.consultingRegistDt;
	}

	public void setConsultingRegistDt(LocalDateTime consultingRegistDt) {
		this.consultingRegistDt = consultingRegistDt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consulting")
	public Set<ConsultingReply> getConsultingReplies() {
		return this.consultingReplies;
	}

	public void setConsultingReplies(Set<ConsultingReply> consultingReplies) {
		this.consultingReplies = consultingReplies;
	}

}
