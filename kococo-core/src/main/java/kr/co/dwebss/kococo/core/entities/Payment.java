package kr.co.dwebss.kococo.core.entities;

import static javax.persistence.GenerationType.IDENTITY;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.springframework.format.annotation.DateTimeFormat;

/**
 * Payment generated by hbm2java
 */
@Entity
@Table(name = "payment", catalog = "kococo")
public class Payment implements java.io.Serializable {

	private int paymentId;
	private User user;
	private int paymentStatus;
	private String paymentOrderId;
	private String paymentPurchaseToken;
	private String paymentDeveloperPayload;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	private LocalDateTime paymentDt;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	private LocalDateTime paymentCancelDt;

	public Payment() {
	}

	public Payment(int paymentId, User user, int paymentStatus, String paymentOrderId, String paymentPurchaseToken,
			String paymentDeveloperPayload, LocalDateTime paymentDt) {
		this.paymentId = paymentId;
		this.user = user;
		this.paymentStatus = paymentStatus;
		this.paymentOrderId = paymentOrderId;
		this.paymentPurchaseToken = paymentPurchaseToken;
		this.paymentDeveloperPayload = paymentDeveloperPayload;
		this.paymentDt = paymentDt;
	}

	public Payment(int paymentId, User user, int paymentStatus, String paymentOrderId, String paymentPurchaseToken,
			String paymentDeveloperPayload, LocalDateTime paymentDt, LocalDateTime paymentCancelDt) {
		this.paymentId = paymentId;
		this.user = user;
		this.paymentStatus = paymentStatus;
		this.paymentOrderId = paymentOrderId;
		this.paymentPurchaseToken = paymentPurchaseToken;
		this.paymentDeveloperPayload = paymentDeveloperPayload;
		this.paymentDt = paymentDt;
		this.paymentCancelDt = paymentCancelDt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "PAYMENT_ID", unique = true, nullable = false)
	public int getPaymentId() {
		return this.paymentId;
	}

	public void setPaymentId(int paymentId) {
		this.paymentId = paymentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_APP_ID", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "PAYMENT_STATUS", nullable = false)
	public int getPaymentStatus() {
		return this.paymentStatus;
	}

	public void setPaymentStatus(int paymentStatus) {
		this.paymentStatus = paymentStatus;
	}

	@Column(name = "PAYMENT_ORDER_ID", nullable = false, length = 1000)
	public String getPaymentOrderId() {
		return this.paymentOrderId;
	}

	public void setPaymentOrderId(String paymentOrderId) {
		this.paymentOrderId = paymentOrderId;
	}

	@Column(name = "PAYMENT_PURCHASE_TOKEN", nullable = false, length = 1000)
	public String getPaymentPurchaseToken() {
		return this.paymentPurchaseToken;
	}

	public void setPaymentPurchaseToken(String paymentPurchaseToken) {
		this.paymentPurchaseToken = paymentPurchaseToken;
	}

	@Column(name = "PAYMENT_DEVELOPER_PAYLOAD", nullable = false, length = 1000)
	public String getPaymentDeveloperPayload() {
		return this.paymentDeveloperPayload;
	}

	public void setPaymentDeveloperPayload(String paymentDeveloperPayload) {
		this.paymentDeveloperPayload = paymentDeveloperPayload;
	}

	@Column(name = "PAYMENT_DT", nullable = false, length = 19)
	public LocalDateTime getPaymentDt() {
		if(this.paymentDt==null) {
			this.paymentDt = LocalDateTime.now();
		}
		return this.paymentDt;
	}

	public void setPaymentDt(LocalDateTime paymentDt) {
		this.paymentDt = paymentDt;
	}

	@Column(name = "PAYMENT_CANCEL_DT", length = 19)
	public LocalDateTime getPaymentCancelDt() {
		return this.paymentCancelDt;
	}

	public void setPaymentCancelDt(LocalDateTime paymentCancelDt) {
		this.paymentCancelDt = paymentCancelDt;
	}

}
